##17.1
library(maps)
map("world", fill = TRUE, col = rainbow(200), ylim = c(-60, 90), mar = c(0, 0, 0, 0)) 
title("世界地圖")  #添加標題

##
library(maptools)
china <- readShapePoly('bou2_4p.shp')
plot(china)

##
library(ggplot2)
library(maps)
data(world.cities)
big <- subset(world.cities, pop>5000000)
qplot(long,lat,data=big) + borders("world",size=0.1)

##
library(mapproj)
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(map)

##
map1 <- get_map(location = 'Taipei', zoom = 12, maptype = 'roadmap')
ggmap(map1)

##
map2 <- get_map(location = 'Taipei', zoom = 15, maptype = 'satellite')
ggmap(map2)


##17.2
qplot(carat,price,data=diamonds,colour=color)
qplot(carat,price,data=diamonds,shape=cut)

##
qplot(carat,price,data=diamonds,alpha= I(1/50))

##
p <- ggplot(diamonds, aes(carat, price))
p + stat_bin2d(bins = 100)

##
p <- ggplot(diamonds, aes(carat, price))
p + geom_point(aes(colour = cut,shape = cut, size = depth), alpha = 0.6, position = 'jitter')

##
qplot(carat,price,data=diamonds,geom=c("point","smooth"))

##
p <- ggplot(diamonds, aes(carat, price,colour=cut))
p + geom_point(alpha=0.1) + geom_smooth()

##17.2.3
qplot(color,data=diamonds,geom="bar")
qplot(color,data=diamonds,geom="bar",weight=carat)+scale_y_continuous("carat")

##
p <- ggplot(diamonds, aes(color, fill=cut))
p + geom_bar(position="stack")
p + geom_bar(position="dodge")
p + geom_bar(position="fill")
p + geom_bar(position="identity",alpha=0.3)

##
qplot(color,price/carat,data=diamonds,geom="boxplot")

##
p <- ggplot(diamonds,aes(color,price/carat,fill=color))
p + geom_boxplot()
p + geom_violin(alpha=0.8,width=0.9) + geom_jitter(shape= 21, alpha = 0.03)


##17.2.4
qplot(carat,data=diamonds,geom="histogram",binwidth=1)
qplot(carat,data=diamonds,geom="histogram",binwidth=0.1)
qplot(carat,data=diamonds,geom="histogram",binwidth=0.01)

##
qplot(carat,data=diamonds,geom="histogram",fill=cut)
qplot(carat,data=diamonds,geom="density",colour=cut)

##
p <- ggplot(diamonds, aes(carat))
p + geom_histogram(position = 'identity',alpha=0.3,aes(y = ..density..,fill = cut),color="white") + stat_density(geom = 'line', position = 'identity', aes(colour = cut))


##17.2.5
qplot(date,uempmed,data=economics,geom="line")

##17.2.6
(unemp <- qplot(date, uempmed, data=economics, geom="line"))
presidential <- presidential[-(1:3),]
unemp + geom_vline(aes(xintercept = as.numeric(start)), data = presidential)

##
library(scales)
xr <- range(economics$date)
yr <- range(economics$uempmed)
unemp + geom_rect(aes(NULL,NULL,xmin=start,xmax=end,fill=name),ymin=yr[1],
  ymax=yr[2],data=presidential,alpha=0.2)


##17.3
x <- seq(-10, 10, length= 30)
y <- x
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")

##
library(scatterplot3d)
data(iris)
scatterplot3d(iris$Petal.Width, iris$Sepal.Length, iris$Sepal.Width)

##
library(rgl)
x <- seq(-10, 10, length= 30)
y <- x
f <- function(x,y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
persp3d(x, y, z, aspect=c(1, 1, 0.5), col = "lightblue",
        xlab = "X", ylab = "Y", zlab = "Sinc( r )")


##17.4
library(wordcloud)
library(tm)
data(crude)
crude <- tm_map(crude, removePunctuation)
crude <- tm_map(crude, function(x)removeWords(x,stopwords()))
tdm <- TermDocumentMatrix(crude)
m <- as.matrix(tdm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
wordcloud(d$word,d$freq,random.order=FALSE, colors=brewer.pal(8, "Dark2"))


##17.5
pairs(mtcars)

##
library(corrplot)
corrplot(cor(mtcars), tl.pos = "d", cl.pos = "n")

##
corrplot(cor(mtcars), order = "h", tl.pos = "d", cl.pos = "n", addrect = 2).


##17.6
ftable(Titanic)

##
require(stats)
library(graphics)
mosaicplot(Titanic, main = "Survival on the Titanic", color = TRUE)



